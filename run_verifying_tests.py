import subprocess
import re

#problem_size_m = ["14848", "15104", "15360", "15616", "15872", "16128", "16384"] 
#problem_size_n = ["14848", "15104", "15360", "15616", "15872", "16128", "16384"] 
#problem_size_k = ["14848", "15104", "15360", "15616", "15872", "16128", "16384"] 
#problem_size_m = ["8848"]
#problem_size_n = ["8848"]
#problem_size_k = ["8848"]
problem_size_m = ["1024", "1280", "1536", "1792", "2048", "2304", "2560", "2816", "3072", "3328", "3584", "3840", "4096", "4352", "4608", "4864", "5120", "5376", "5632", "5888", "6144", "6400", "6656", "6912", "7168", "7424", "7680", "7936", "8192", "8448", "8704", "8960", "9216", "9472", "9728", "9984", "10240", "10496", "10752", "11008", "11264", "11520", "11776", "12032", "12288", "12544", "12800", "13056", "13312", "13568", "13824", "14080", "14336", "14592", "14848", "15104", "15360", "15616", "15872", "16128", "16384"] 
problem_size_n = ["1024", "1280", "1536", "1792", "2048", "2304", "2560", "2816", "3072", "3328", "3584", "3840", "4096", "4352", "4608", "4864", "5120", "5376", "5632", "5888", "6144", "6400", "6656", "6912", "7168", "7424", "7680", "7936", "8192", "8448", "8704", "8960", "9216", "9472", "9728", "9984", "10240", "10496", "10752", "11008", "11264", "11520", "11776", "12032", "12288", "12544", "12800", "13056", "13312", "13568", "13824", "14080", "14336", "14592", "14848", "15104", "15360", "15616", "15872", "16128", "16384"] 
problem_size_k = ["1024", "1280", "1536", "1792", "2048", "2304", "2560", "2816", "3072", "3328", "3584", "3840", "4096", "4352", "4608", "4864", "5120", "5376", "5632", "5888", "6144", "6400", "6656", "6912", "7168", "7424", "7680", "7936", "8192", "8448", "8704", "8960", "9216", "9472", "9728", "9984", "10240", "10496", "10752", "11008", "11264", "11520", "11776", "12032", "12288", "12544", "12800", "13056", "13312", "13568", "13824", "14080", "14336", "14592", "14848", "15104", "15360", "15616", "15872", "16128", "16384"] 

subprocess.run(["/usr/local/cuda-11.2/bin/nvcc", "-lcublas", "-DPRINT_RES", "gemm_mat_add.cu"])
#subprocess.run(["/usr/local/cuda-11.2/bin/nvcc", "-lcublas", "-DPRINT_RES" ,"gemm_f16.cu"])

for pm in problem_size_m:
    for pn in problem_size_n:
        for pk in problem_size_k:
            if int(pm) == int(pn) and int(pn) == int(pk):
                result = subprocess.run(["./a.out", pm, pn, pk, "1"], capture_output=True, text=True)
                gflopsDirty = result.stdout
                #tidyGflops = re.findall('\d*\.?\d+', gflopsDirty.decode('utf-8'))                                                              
                outFile = open("./outputs/seed_5/mat_add/"+pm+"_f32_mat_add_cblas.out", 'w')
                print(gflopsDirty, file = outFile)
                #print(gflopsDirty)
                outFile.close()
